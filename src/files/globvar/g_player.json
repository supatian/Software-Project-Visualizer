{"nodes" : [{"id" : 0, "x" : 119, "y" : 112, "width" : 295, "height" : 478, "txt" : "<div>/**</div><div>&nbsp; &nbsp; The ApplicationManager is used to manage the application itself.</div><div>&nbsp; &nbsp; @author &lt;a href=\"mailto:matthewcasperson@gmail.com\"&gt;Matthew Casperson&lt;/a&gt;</div><div>&nbsp; &nbsp; @class</div><div>*/</div><div>function ApplicationManager()</div><div>{</div><div>&nbsp; &nbsp; this.canvasWidth = 0;</div><div>&nbsp; &nbsp; this.canvasHeight = 0;</div><div><br></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Initialises this object</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param canvasWidth &nbsp; &nbsp; &nbsp;The width of the canvas</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param canvasHeight &nbsp; &nbsp; The height of the canvas</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A reference to the initialised object</div><div><br></div><div>&nbsp; &nbsp; */</div><div>&nbsp; &nbsp; this.startupApplicationManager = function(canvasWidth, canvasHeight)</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_ApplicationManager = this;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.canvasWidth = canvasWidth;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.canvasHeight = canvasHeight;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.openMainMenu();</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; return this;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.startLevel = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_GameObjectManager.shutdownAll();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.level = new Level().startupLevel(this.canvasWidth, this.canvasHeight);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.background3 = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background2, 0, 100, 3, 600, 320, 0.75);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.background2 = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background1, 0, 100, 2, 600, 320, 0.5);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.background = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background0, 0, 0, 1, 600, 320, 0.25);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_player = new Player().startupPlayer(this.level);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.updateScore();</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.openMainMenu = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_GameObjectManager.shutdownAll();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_GameObjectManager.xScroll = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_GameObjectManager.yScroll = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_score = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.mainMenu = new MainMenu().startupMainMenu();</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.updateScore = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var score = document.getElementById(\"Score\");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; score.innerHTML = String(g_score);</div><div>&nbsp; &nbsp; }</div><div>}</div>"},{"id" : 1, "x" : 452, "y" : 115, "width" : 200, "height" : 300, "txt" : "<div>/**</div><div>&nbsp; &nbsp; An object that causes the level to end when it it touched</div><div>&nbsp; &nbsp; @author &lt;a href=\"mailto:matthewcasperson@gmail.com\"&gt;Matthew Casperson&lt;/a&gt;</div><div>&nbsp; &nbsp; @class</div><div>*/</div><div>function LevelEndPost()</div><div>{</div><div><br></div><div>&nbsp; &nbsp; this.startupLevelEndPost = function(/**Image*/ image, /**Number*/ x, /**Number*/ y, /**Number*/ z)</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.startupAnimatedGameObject(image, x, y, z, 4, 10);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return this;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.shutdown = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.shutdownLevelEndPost();</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.shutdownLevelEndPost = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.shutdownAnimatedGameObject();</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Updates the object</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param dt The time since the last frame in seconds</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param context The drawing context</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param xScroll The global scrolling value of the x axis</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param yScroll The global scrolling value of the y axis</div><div>&nbsp; &nbsp; */</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\">    </span>this.update = function (/**Number*/ dt, /**CanvasRenderingContext2D*/context, /**Number*/ xScroll, /**Number*/ yScroll)</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (this.collisionArea().intersects(g_player.collisionArea()))</div><div>&nbsp; &nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_ApplicationManager.openMainMenu();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.shutdown(); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>}</div><div>LevelEndPost.prototype = new AnimatedGameObject;</div>"},{"id" : 2, "x" : 671, "y" : 114, "width" : 200, "height" : 300, "txt" : "<div>/** target frames per second &nbsp;</div><div>&nbsp; &nbsp; @type Number</div><div>*/</div><div>var FPS = 30;</div><div>/** time between frames&nbsp;</div><div>&nbsp; &nbsp; @type Number</div><div>*/</div><div>var SECONDS_BETWEEN_FRAMES = 1 / FPS;</div><div>/** A global reference to the GameObjectManager instance &nbsp;</div><div>&nbsp; &nbsp; @type GameObjectManager</div><div>*/</div><div>var g_GameObjectManager = null;</div><div>/** A global reference to the ApplicationManager instance &nbsp;</div><div>&nbsp; &nbsp; @type ApplicationManager</div><div>*/</div><div>var g_ApplicationManager = null;</div><div>/** A global reference to the ResourceManager instance</div><div>&nbsp; &nbsp; @type ResourceManager</div><div>*/</div><div>var g_ResourceManager = null;</div><div>/** The players score</div><div>&nbsp; &nbsp; @type Number</div><div>&nbsp;*/</div><div>var g_score = 0;</div><div>/** A reference to the player</div><div>&nbsp; &nbsp; @type Player &nbsp; &nbsp;</div><div>&nbsp;*/</div><div>var g_player = null;</div><div>/** An image to be used by the application</div><div>&nbsp; &nbsp; @type Image</div><div>*/</div><div><br></div><div>// The entry point of the application is set to the init function</div><div>window.onload = init;</div><div><br></div><div>/**</div><div>&nbsp; &nbsp; Application entry point</div><div>*/</div><div>function init()</div><div>{</div><div>&nbsp; &nbsp; new GameObjectManager().startupGameObjectManager();</div><div>}</div>"},{"id" : 3, "x" : 880, "y" : 113, "width" : 200, "height" : 300, "txt" : "<div>/**</div><div>&nbsp; &nbsp; Represents a powerup in the game</div><div>&nbsp; &nbsp; @author &lt;a href=\"mailto:matthewcasperson@gmail.com\"&gt;Matthew Casperson&lt;/a&gt;</div><div>&nbsp; &nbsp; @class</div><div>*/</div><div>function Powerup()</div><div>{</div><div>&nbsp; &nbsp; /** The value of the powerup</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @type Number</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; this.value = 0;</div><div>&nbsp; &nbsp; /** The current position on the sine wave</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @type Number</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; this.sineWavePos = 0;</div><div>&nbsp; &nbsp; /** How quickly the powerup cycles through the sine wave</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @type Number</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; this.bounceTime = 1;</div><div>&nbsp; &nbsp; /** The speed to increment the sineWavePos value at</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @type Number</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; this.bounceSpeed = Math.PI / this.bounceTime;</div><div>&nbsp; &nbsp; /** The height of the powerups bounce</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @type Number</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; this.bounceHeight = 10;</div><div><br></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Initialises this object</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param value &nbsp; &nbsp; &nbsp; &nbsp;The value (score) of this powerup</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param image &nbsp; &nbsp; &nbsp; &nbsp;The image to be displayed</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param x &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The position on the X axis</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param y &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The position on the Y axis</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param z &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The depth</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param frameCount &nbsp; The number of animation frames in the image</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param fps &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The frames per second to animate this object at</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; this.startupPowerup = function(/**Number*/ value, /**Image*/ image, /**Number*/ x, /**Number*/ y, /**Number*/ z, /**Number*/ frameCount, /**Number*/ fps)</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.startupAnimatedGameObject(image, x, y - this.bounceHeight, z, frameCount, fps);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.value = value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return this;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.shutdownPowerup = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.shutdownAnimatedGameObject();</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.shutdown = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.shutdownPowerup();</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Updates the object</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param dt The time since the last frame in seconds</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param context The drawing context</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param xScroll The global scrolling value of the x axis</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param yScroll The global scrolling value of the y axis</div><div>&nbsp; &nbsp; */</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\">    </span>this.update = function (/**Number*/ dt, /**CanvasRenderingContext2D*/context, /**Number*/ xScroll, /**Number*/ yScroll)</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var lastSineWavePos = this.sineWavePos;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.sineWavePos += this.bounceSpeed * dt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.y += (Math.sin(this.sineWavePos) - Math.sin(lastSineWavePos)) * this.bounceHeight;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (this.collisionArea().intersects(g_player.collisionArea()))</div><div>&nbsp; &nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.shutdown();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_score += this.value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_ApplicationManager.updateScore();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>}</div><div><br></div><div>Powerup.prototype = new AnimatedGameObject;</div>"}], "connections" : []}