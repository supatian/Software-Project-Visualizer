{"nodes" : [{"id" : 0, "x" : 486, "y" : 492, "width" : 150, "height" : 100, "txt" : "VisualGameObject","src" : "/**\n    The base class for all elements that appear in the game.\n    @author <a href=\"mailto:matthewcasperson@gmail.com\">Matthew Casperson</a>\n    @class\n*/\nfunction VisualGameObject()\n{\n    /**\n        The image that will be displayed by this object\n        @type Image\n    */\n    this.image = null;\n    \n    /**\n        Draws this element to the back buffer\n        @param dt Time in seconds since the last frame\n        @param context The context to draw to\n        @param xScroll The global scrolling value of the x axis  \n        @param yScroll The global scrolling value of the y axis  \n    */\n    this.draw = function(/**Number*/ dt, /**CanvasRenderingContext2D*/ context, /**Number*/ xScroll, /**Number*/ yScroll)\n    {\n        context.drawImage(this.image, this.x - xScroll, this.y - yScroll);\n    }\n    \n    /**\n        Initialises this object\n        @param image The image to be displayed\n        @param x The position on the X axis\n        @param y The position on the Y axis\n        @param z The depth\n    */\n    this.startupVisualGameObject = function(/**Image*/ image, /**Number*/ x, /**Number*/ y, /**Number*/ z)\n    {\n        this.startupGameObject(x, y, z);\n        this.image = image;\n        return this;\n    }\n    \n    /**\n        Clean this object up\n    */\n    this.shutdownVisualGameObject = function()\n    {\n        this.image = null;\n        this.shutdownGameObject();\n    }\n\n    this.shutdown = function()\n    {\n        this.shutdownVisualGameObject();\n    }\n\n    this.collisionArea = function()\n    {\n        return new Rectangle().startupRectangle(this.x, this.y, this.image.width, this.image.height);\n    }\n}\nVisualGameObject.prototype = new GameObject;"},{"id" : 1, "x" : 486, "y" : 266, "width" : 150, "height" : 100, "txt" : "GameObject","src" : "/**\n    The base class for all elements that appear in the game.\n    @author <a href=\"mailto:matthewcasperson@gmail.com\">Matthew Casperson</a>\n    @class\n*/\nfunction GameObject()\n{\n    /** Display depth order. A smaller zOrder means the element is rendered first, and therefor\n        in the background.\n        @type Number\n    */\n    this.zOrder = 0;\n    /**\n        The position on the X axis\n        @type Number\n    */\n    this.x = 0;\n    /**\n        The position on the Y axis\n        @type Number\n    */\n    this.y = 0;\n    \n    /**\n        Initialises the object, and adds it to the list of objects held by the GameObjectManager.\n        @param x        The position on the X axis\n        @param y        The position on the Y axis\n        @param z        The z order of the element (elements in the background have a lower z value)\n    */\n    this.startupGameObject = function(/**Number*/ x, /**Number*/ y, /**Number*/ z)\n    {\n        this.zOrder = z;\n        this.x = x;\n        this.y = y;\n        g_GameObjectManager.addGameObject(this);\n        return this;\n    }\n    \n    /**\n        Cleans up the object, and removes it from the list of objects held by the GameObjectManager.\n    */\n    this.shutdownGameObject = function()\n    {\n        g_GameObjectManager.removeGameObject(this);\n    }\n\n    this.shutdown = function()\n    {\n         this.shutdownGameObject();\n    }\n}"}], "connections" : [{"nodeA" : 0, "nodeB" : 1, "conA" : "top", "conB" : "bottom"}]}