{"nodes" : [{"id" : 0, "x" : 295, "y" : 68, "width" : 340, "height" : 511, "txt" : "<div>/**</div><div>&nbsp; &nbsp; The ApplicationManager is used to manage the application itself.</div><div>&nbsp; &nbsp; @author &lt;a href=\"mailto:matthewcasperson@gmail.com\"&gt;Matthew Casperson&lt;/a&gt;</div><div>&nbsp; &nbsp; @class</div><div>*/</div><div>function ApplicationManager()</div><div>{</div><div>&nbsp; &nbsp; this.canvasWidth = 0;</div><div>&nbsp; &nbsp; this.canvasHeight = 0;</div><div><br></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Initialises this object</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param canvasWidth &nbsp; &nbsp; &nbsp;The width of the canvas</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @param canvasHeight &nbsp; &nbsp; The height of the canvas</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @return &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A reference to the initialised object</div><div><br></div><div>&nbsp; &nbsp; */</div><div>&nbsp; &nbsp; this.startupApplicationManager = function(canvasWidth, canvasHeight)</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_ApplicationManager = this;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.canvasWidth = canvasWidth;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.canvasHeight = canvasHeight;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.openMainMenu();</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; return this;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.startLevel = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_GameObjectManager.shutdownAll();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.level = new Level().startupLevel(this.canvasWidth, this.canvasHeight);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.background3 = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background2, 0, 100, 3, 600, 320, 0.75);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.background2 = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background1, 0, 100, 2, 600, 320, 0.5);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.background = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background0, 0, 0, 1, 600, 320, 0.25);</div><div>&nbsp; &nbsp; &nbsp; &nbsp;<span class=\"highlight\"> g_player </span>= <span class=\"highlight\"><span class=\"highlight\">new Player(</span></span>).startupPlayer(this.level);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.updateScore();</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.openMainMenu = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_GameObjectManager.shutdownAll();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_GameObjectManager.xScroll = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_GameObjectManager.yScroll = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; g_score = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.mainMenu = new MainMenu().startupMainMenu();</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; this.updateScore = function()</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var score = document.getElementById(\"Score\");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; score.innerHTML = String(g_score);</div><div>&nbsp; &nbsp; }</div><div>}</div>"}], "connections" : []}